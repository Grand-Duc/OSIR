Vagrant.configure("2") do |config|
    config.vm.define "dfir_box" do |dfir_box|
        config.vm.box = "StefanScherer/windows_10"
        config.vm.provider "virtualbox" do |vb|
            vb.memory = "4096"
            vb.cpus = "2"
            vb.name = "dfir_box"
        config.vm.network "forwarded_port", guest: 5985, host: 5985
        end
        config.winrm.max_tries = 300 # default is 20
        config.winrm.retry_delay = 5 #seconds. This is the defaul value and just here for documentation.
        config.vm.synced_folder ".", "/vagrant", type: "virtualbox"
        config.vm.provision "shell", powershell_elevated_interactive: "true", privileged: "true", inline: <<-SHELL
            # Mount smb share ?
            # $driveLetter = "Z" ; $networkPath = "\\10.0.2.2\share" ; $username = "smb_dfir";  $password = ConvertTo-SecureString "dfir" -AsPlainText -Force ; $credentials = New-Object System.Management.Automation.PSCredential($username, $password)# Choose the drive letter you want to assign

            # # Install Chocolatey
            # Invoke-Expression "& { $(Invoke-RestMethod 'https://aka.ms/install-powershell.ps1') } -AddToPath"
            # Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
            # # Enable too long paths
            # New-ItemProperty -Path "HKLM:\\SYSTEM\\CurrentControlSet\\Control\\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
            # # Change exec policy
            # Set-ExecutionPolicy unrestricted  -scope Process -Force
            # # Set Defender exclusion
            # Set-MpPreference -DisableRealtimeMonitoring $true
            # Add-MpPreference -ExclusionPath "C:\\"
            # # Create custom tools directory
            # $bin_dir = "C:\\OSIR\\bin"
            # New-Item -ItemType Directory -Path $bin_dir -Force
            # # Set local bin source
            # $bin_dir_src = "/vagrant/src/bin/*"
            # # Copy all tools
            # Copy-Item -Path $bin_dir_src -Destination $bin_dir
            # # --- Download EZ tools
            # # Download zip file
            # $zipUrl = "https://f001.backblazeb2.com/file/EricZimmermanTools/Get-ZimmermanTools.zip"
            # Invoke-WebRequest -Uri $zipUrl -OutFile "$env:TEMP\Get-ZimmermanTools.zip"
            # # Extract the contents of the zip file
            # Expand-Archive -Path "$env:TEMP\Get-ZimmermanTools.zip" -DestinationPath $bin_dir -Force
            # # Run Get-ZimmermanTools with the specified options
            # & "$bin_dir\\Get-ZimmermanTools.ps1" -Dest $bin_dir
            # # Install dotnet 6.0
            # choco install dotnet-6.0-desktopruntime -y
            # # Install python311
            # choco install python311 -y

        SHELL

        # New shell to load env var
        config.vm.provision "shell", powershell_elevated_interactive: "true", privileged: "true", inline: <<-SHELL
            # # Set python requiremnts
            # $python_req = "/vagrant/src/dependencies/requirements.txt"
            # #Install python requirements
            # python -m pip install -r $python_req
        SHELL
    end
end